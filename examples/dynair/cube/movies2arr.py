import argparse
import glob
from PIL import Image
import numpy as np

# This takes the frames generated by mk_dataset.py and packs them into
# a single numpy array.a

def img_to_arr(img):
    assert img.mode == 'RGBA'
    channels = 4
    w, h = img.size
    arr = np.fromstring(img.tobytes(), dtype=np.uint8)
    return arr.reshape(w * h, channels).T.reshape(channels, h, w)

def frames_to_arr(pathname):

    # Glob all frames.
    fns = sorted(glob.glob(pathname + '/frame_*.png'))

    # Read frames.
    frames = []
    for fn in fns:
        img = Image.open(fn).convert('RGBA')
        arr = img_to_arr(img)
        frames.append(arr)

    # Stack into array.
    out = np.stack(frames)

    return out

def main(movies_path):
    # TODO: I think my choice of directory names means these aren't
    # sorted in the expected order. This means I can't find a seq. I
    # like on disk and then easily locate that in the array. Maybe
    # write to movie001, movie002, etc. to fix this.
    movie_paths = sorted(glob.glob(movies_path + '/movie*'))
    movies = [frames_to_arr(path) for path in movie_paths]
    X = np.stack(movies)
    print(X.shape)
    np.savez_compressed('out.npz', X=X)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-m', type=str)
    args = parser.parse_args()
    assert args.m is not None, 'argument error'
    main(args.m)
